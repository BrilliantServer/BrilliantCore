From 0000000000000000000000000000000000000000 Mon Sep 17 00:00:00 2001
From: NCT skyouo <anwugame@gmail.com>
Date: Thu, 8 Jul 2021 12:22:09 +0800
Subject: [PATCH] Yatopia Heavily Optimize Furnance Fuel and Recipe Lookups


diff --git a/src/main/java/net/minecraft/world/level/block/entity/AbstractFurnaceBlockEntity.java b/src/main/java/net/minecraft/world/level/block/entity/AbstractFurnaceBlockEntity.java
index fb3f7e821224889b08c0f424d79e122cba9d0645..610f37fd8c21001629b96861413834666f31a107 100644
--- a/src/main/java/net/minecraft/world/level/block/entity/AbstractFurnaceBlockEntity.java
+++ b/src/main/java/net/minecraft/world/level/block/entity/AbstractFurnaceBlockEntity.java
@@ -56,6 +56,7 @@ import org.bukkit.event.inventory.FurnaceSmeltEvent;
 
 public abstract class AbstractFurnaceBlockEntity extends BaseContainerBlockEntity implements WorldlyContainer, RecipeHolder, StackedContentsCompatible {
 
+    private static AbstractFurnaceBlockEntity self;
     protected static final int SLOT_INPUT = 0;
     protected static final int SLOT_FUEL = 1;
     protected static final int SLOT_RESULT = 2;
@@ -81,6 +82,7 @@ public abstract class AbstractFurnaceBlockEntity extends BaseContainerBlockEntit
 
     protected AbstractFurnaceBlockEntity(BlockEntityType<?> blockEntityType, BlockPos pos, BlockState state, RecipeType<? extends AbstractCookingRecipe> recipeType) {
         super(blockEntityType, pos, state);
+        self = this;
         this.items = NonNullList.withSize(3, ItemStack.EMPTY);
         this.dataAccess = new ContainerData() {
             @Override
@@ -339,7 +341,10 @@ public abstract class AbstractFurnaceBlockEntity extends BaseContainerBlockEntit
                 blockEntity.cookingProgress = Mth.clamp(blockEntity.cookingProgress - 2, 0, blockEntity.cookingTotalTime);
             }
         } else {
-            Recipe<?> irecipe = (Recipe) world.getRecipeManager().getRecipeFor((RecipeType<AbstractCookingRecipe>) blockEntity.recipeType, blockEntity, world).orElse(null); // CraftBukkit - decompile error // Eclipse fail
+            // Brilliant start - From Yatopia - used cached recipe if possible, otherwise look up
+            Recipe<?> irecipe = self.getCurrentRecipe();
+            if (irecipe == null) irecipe = (Recipe) world.getRecipeManager().getRecipeFor((RecipeType<AbstractCookingRecipe>) blockEntity.recipeType, blockEntity, world).orElse(null); // CraftBukkit - decompile error // Eclipse fail
+            // Brilliant End
             int i = blockEntity.getMaxStackSize();
 
             if (!blockEntity.isLit() && AbstractFurnaceBlockEntity.canBurn(irecipe, blockEntity.items, i)) {
@@ -662,4 +667,18 @@ public abstract class AbstractFurnaceBlockEntity extends BaseContainerBlockEntit
         }
 
     }
+
+    // Brilliant start - From Yatopia - cache recipe
+    private Recipe cachedRecipe = null;
+
+    @Override
+    public Recipe getCurrentRecipe() {
+        return cachedRecipe;
+    }
+
+    @Override
+    public void setCurrentRecipe(Recipe recipe) {
+        cachedRecipe = recipe;
+    }
+    // Brilliant end
 }
diff --git a/src/main/java/tech/skyouo/brilliant/BrilliantConfig.java b/src/main/java/tech/skyouo/brilliant/BrilliantConfig.java
index b3b71ba2f27c2c79422b25dc62c4fe0f14c9e5f3..15cf562c0658bf4912fd07bfb5f7828fec15a891 100644
--- a/src/main/java/tech/skyouo/brilliant/BrilliantConfig.java
+++ b/src/main/java/tech/skyouo/brilliant/BrilliantConfig.java
@@ -44,10 +44,6 @@ public class BrilliantConfig {
         config.options().header(HEADER);
         config.options().copyDefaults(true);
 
-        commands = new HashMap<>();
-        commands.put("brilliant", new BrilliantCommand());
-        registerCommands();
-
         version = getInt("config-version", 1);
         set("config-version", 1);
 
