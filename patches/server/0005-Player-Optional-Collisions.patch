From 0000000000000000000000000000000000000000 Mon Sep 17 00:00:00 2001
From: skyouo0727 <anwugame@gmail.com>
Date: Thu, 17 Feb 2022 22:41:01 +0800
Subject: [PATCH] Player Optional Collisions


diff --git a/src/main/java/net/minecraft/server/network/ServerGamePacketListenerImpl.java b/src/main/java/net/minecraft/server/network/ServerGamePacketListenerImpl.java
index 697de170bddce31651d3c6efb0b74ec29610f85d..7f3cf65ee79eb11b4b8679e4432d4001bf652fde 100644
--- a/src/main/java/net/minecraft/server/network/ServerGamePacketListenerImpl.java
+++ b/src/main/java/net/minecraft/server/network/ServerGamePacketListenerImpl.java
@@ -338,7 +338,7 @@ public class ServerGamePacketListenerImpl implements ServerPlayerConnection, Ser
             this.vehicleLastGoodY = this.lastVehicle.getY();
             this.vehicleLastGoodZ = this.lastVehicle.getZ();
             if (this.clientVehicleIsFloating && this.player.getRootVehicle().getControllingPassenger() == this.player) {
-                if (++this.aboveGroundVehicleTickCount > 80) {
+                if (++this.aboveGroundVehicleTickCount > MinecraftServer.TPS * 4) { // Brilliant - wtf why there use 80 instead of 4 * TPS?
                     ServerGamePacketListenerImpl.LOGGER.warn("{} was kicked for floating a vehicle too long!", this.player.getName().getString());
                     this.disconnect(com.destroystokyo.paper.PaperConfig.flyingKickVehicleMessage, org.bukkit.event.player.PlayerKickEvent.Cause.FLYING_VEHICLE); // Paper - use configurable kick message & kick event cause
                     return;
diff --git a/src/main/java/net/minecraft/world/entity/Entity.java b/src/main/java/net/minecraft/world/entity/Entity.java
index 335ac54bef892db6b9fe66d0a7c3966abda84350..9062daf99c4df5d78f8235d60513ee13e88e7b30 100644
--- a/src/main/java/net/minecraft/world/entity/Entity.java
+++ b/src/main/java/net/minecraft/world/entity/Entity.java
@@ -146,6 +146,7 @@ import org.bukkit.event.entity.EntityPortalEvent;
 import org.bukkit.event.entity.EntityPoseChangeEvent;
 import org.bukkit.event.player.PlayerTeleportEvent;
 import org.bukkit.plugin.PluginManager;
+import tech.skyouo.brilliant.BrilliantConfig;
 // CraftBukkit end
 
 public abstract class Entity implements Nameable, EntityAccess, CommandSource, io.papermc.paper.util.KeyedObject { // Paper
@@ -1853,6 +1854,7 @@ public abstract class Entity implements Nameable, EntityAccess, CommandSource, i
         if (!this.isPassengerOfSameVehicle(entity)) {
             if (!entity.noPhysics && !this.noPhysics) {
                 if (this.level.paperConfig.onlyPlayersCollide && !(entity instanceof ServerPlayer || this instanceof ServerPlayer)) return; // Paper
+                if (!BrilliantConfig.doPlayersCollide && (entity instanceof ServerPlayer && this instanceof ServerPlayer)) return; // Brilliant - disable player collide
                 double d0 = entity.getX() - this.getX();
                 double d1 = entity.getZ() - this.getZ();
                 double d2 = Mth.absMax(d0, d1);
diff --git a/src/main/java/net/minecraft/world/entity/EntitySelector.java b/src/main/java/net/minecraft/world/entity/EntitySelector.java
index e39965c2e50bc8ee424ea07819346e0611398e28..42338ef59d3e603eeba6832b8e687db5c8d31de0 100644
--- a/src/main/java/net/minecraft/world/entity/EntitySelector.java
+++ b/src/main/java/net/minecraft/world/entity/EntitySelector.java
@@ -7,6 +7,7 @@ import net.minecraft.world.Container;
 import net.minecraft.world.entity.player.Player;
 import net.minecraft.world.item.ItemStack;
 import net.minecraft.world.scores.Team;
+import tech.skyouo.brilliant.BrilliantConfig;
 
 public final class EntitySelector {
 
@@ -59,6 +60,8 @@ public final class EntitySelector {
                 return false;
             } else if (entity.level.isClientSide && (!(entity1 instanceof Player) || !((Player) entity1).isLocalPlayer())) {
                 return false;
+            } else if (!BrilliantConfig.doPlayersCollide && entity1 instanceof Player && entity instanceof Player) { // Brilliant - Optional player collisions
+                return false;
             } else {
                 Team scoreboardteambase1 = entity1.getTeam();
                 Team.CollisionRule scoreboardteambase_enumteampush1 = scoreboardteambase1 == null ? Team.CollisionRule.ALWAYS : scoreboardteambase1.getCollisionRule();
diff --git a/src/main/java/net/minecraft/world/entity/LivingEntity.java b/src/main/java/net/minecraft/world/entity/LivingEntity.java
index 2c988e05299d530d483e21ab452de0a03e5bdcbd..1631ccf23aacfca541584c91e26c117e1a765485 100644
--- a/src/main/java/net/minecraft/world/entity/LivingEntity.java
+++ b/src/main/java/net/minecraft/world/entity/LivingEntity.java
@@ -3414,6 +3414,7 @@ public abstract class LivingEntity extends Entity {
         if (i <= 0 && level.paperConfig.maxCollisionsPerEntity <= 0) {
             return;
         }
+
         // Paper end - don't run getEntities if we're not going to use its result
         List<Entity> list = this.level.getEntities((Entity) this, this.getBoundingBox(), EntitySelector.pushable(this, level.paperConfig.fixClimbingBypassingCrammingRule)); // Paper - fix climbing bypassing cramming rule
 
diff --git a/src/main/java/tech/skyouo/brilliant/BrilliantConfig.java b/src/main/java/tech/skyouo/brilliant/BrilliantConfig.java
index 7e41223c96d9ef8089b7ca90f5538d3a6d54f079..98c77e910c908a65a065667be82c74ae04e080a2 100644
--- a/src/main/java/tech/skyouo/brilliant/BrilliantConfig.java
+++ b/src/main/java/tech/skyouo/brilliant/BrilliantConfig.java
@@ -46,8 +46,8 @@ public class BrilliantConfig {
         config.options().header(HEADER);
         config.options().copyDefaults(true);
 
-        version = getInt("config-version", 1);
-        set("config-version", 1);
+        version = getInt("config-version", 2);
+        set("config-version", 2);
 
         readConfig(BrilliantConfig.class, null);
     }
@@ -151,4 +151,8 @@ public class BrilliantConfig {
         tpsLimit = getInt("tps.limit", 20);
     }
 
+    public static boolean doPlayersCollide = true;
+    private  static void setDoPlayersCollide() {
+        doPlayersCollide = getBoolean("do-players-collide", true);
+    }
 }
